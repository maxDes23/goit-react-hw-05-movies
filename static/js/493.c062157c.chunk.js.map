{"version":3,"file":"static/js/493.c062157c.chunk.js","mappings":"mPAKMA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6CAKtBC,EAAQH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4CAKlBG,EAAOL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+BAIhBK,EAAYP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6BA+C1B,UA3Ca,WACX,IAAAO,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,GAAM,sCAADC,OACcb,EAAO,sDAC7C,KAAD,EAFKQ,EAAMC,EAAAK,KAGZf,EAAQS,EAAOO,KAAKjB,MAAMW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE1BQ,QAAQC,MAAM,6BAA4BT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAEtD,kBATc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAWflB,GACF,GAAG,CAACH,KAGFsB,EAAAA,EAAAA,KAAA,OAAAC,SACGzB,GACCwB,EAAAA,EAAAA,KAAA,OAAAC,SACGzB,EAAK0B,KAAI,SAAAC,GAAK,OACbC,EAAAA,EAAAA,MAAC1C,EAAS,CAAAuC,SAAA,EACRD,EAAAA,EAAAA,KAAChC,EAAI,CAAAiC,SAAEE,EAAME,QACbL,EAAAA,EAAAA,KAAC9B,EAAS,CAAA+B,SAAEE,EAAMG,YACjBH,EAAMI,eACLP,EAAAA,EAAAA,KAAClC,EAAK,CACJ0C,IAAG,kCAAAjB,OAAoCY,EAAMI,cAC7CE,IAAKN,EAAME,SANDF,EAAMO,QASV,MAIhB,cAIR,C","sources":["pages/Cast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst Image = styled.img`\n  width: 100px;\n  height: auto;\n`;\n\nconst Name = styled.h2`\n  font-size: 1.5em;\n`;\n\nconst Character = styled.p`\n  font-size: 1em;\n`;\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=04b4d601805ac31a2739906707e3a331`\n        );\n        setCast(result.data.cast);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast ? (\n        <div>\n          {cast.map(actor => (\n            <Container key={actor.cast_id}>\n              <Name>{actor.name}</Name>\n              <Character>{actor.character}</Character>\n              {actor.profile_path && (\n                <Image\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              )}\n            </Container>\n          ))}\n        </div>\n      ) : (\n        'Loading...'\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","Name","_templateObject3","Character","_templateObject4","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","apply","arguments","_jsx","children","map","actor","_jsxs","name","character","profile_path","src","alt","cast_id"],"sourceRoot":""}